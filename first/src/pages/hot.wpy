<style>
.big {
  height: 3rem;
  width: 3rem;
  border: 1px solid gainsboro;
  border-radius: 0.5rem;
  margin-left: 1rem;
  margin-right: 1rem;
}

.direction {
  display: flex;
  flex-direction: row;
  align-items: center
}

.tx {
  font-size: 0.7rem;
}

.tx1 {
  font-size: 0.6rem;
  margin-top: 0.1rem;
}

.introduction {
  font-size: 0.7rem;
  margin-top: 0.5rem;
}

.distance {
  border-top: 0.1rem solid gainsboro;
  margin-top: 1rem;
}

.want {
  display: flex;
  align-items: center;
  margin: 1rem;
}

.wantborder {
  border: 1px solid gold;
  border-radius: 0.5rem;
  padding: 0.3rem;
  background-color: gold;
  margin-right: 1rem;
  color: ghostwhite;
  font-size: 0.8rem;
}
</style>
<template>
  <view>
    <view class="direction">
      <image class="big" src="{{icon}}"></image>
      <view>
        <view class="tx">{{title}}</view>
        <view class="tx1">{{desc}}</view>
      </view>
    </view>
    <view class="want">
      <view class="wantborder" @tap="collect">想用</view>
      <view class="wantborder" @tap="collection">用过</view>
    </view>

    <view class="distance">
      <view style="margin-top: 0.5rem">应用介绍</view>
      <view class="introduction">{{introduce}}</view>
    </view>
    <view class="distance">
      <view style="margin-top: 0.5rem">系统更新</view>
      <view class="introduction">{{update}}</view>
    </view>
    <view class="distance">
      <view style="margin-top: 0.5rem">用户评论</view>
      <view class="introduction"></view>
    </view>
  </view>
</template>
<script>
import wepy from 'wepy'
export default class Hot extends wepy.page {
  config = {

  }
  data = {
    title: '',
    icon: '',
    desc: '',
    introduce: '',
    update: ''
  }
  methods = {
    collect() {
      let self = this
      try {
        wepy.setStorageSync('icon', self.icon)
        wepy.setStorageSync('title', self.title)
      } catch (e) {
      }
    },
    collection() {
      let self = this
      try {
        wepy.setStorageSync('_icon', self.icon)
        wepy.setStorageSync('_title', self.title)
      } catch (e) {
      }
    }
  }
  onLoad(data) {
    let self = this
    self.title = data.title
    self.icon = data.icon
    self.desc = data.desc
    self.introduce = data.introduce
    self.update = data.update
  }
}

</script>
